/* eslint-disable @typescript-eslint/no-floating-promises */
import { Composer, Markup, Scenes, session, Telegraf } from 'telegraf'
import { OssDecisionPaperWizard } from './ossDecisionPaperWizard'
import { OssHelperContext } from "./OssHelperContext"

const token = process.env.BOT_TOKEN
if (token === undefined) {
  throw new Error('BOT_TOKEN must be provided!')
}

// Handler factories
const { leave } = Scenes.Stage

const bot = new Telegraf<OssHelperContext>(token)

const mainScreenKeyboard = Markup.inlineKeyboard([  
   Markup.button.callback('üó≥ –ü–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–º –û–°–°', 'OSS_ACTION'),
   Markup.button.callback('ü™ì –ò—Å–∫ –ø—Ä–æ—Ç–∏–≤ –û–°–° –£–ö –û–±—ä–µ–∫—Ç', 'LAW_OSS_ACTION')   
])

bot.start((ctx) => 
{
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ò–ì–° –î–∏—Å–∫–∞–≤–µ—Ä–∏ –ü–∞—Ä–∫. –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ?' , mainScreenKeyboard)     
})

const stage = new Scenes.Stage<OssHelperContext>([OssDecisionPaperWizard], {
  //ttl: 0,
})
bot.use(session())
bot.use(stage.middleware())

// bot.hears('üîç oss', (ctx) => ctx.scene.enter('ossDecisionPaperWizard'))
// bot.command('echo', (ctx) => ctx.reply('idi nafig'))
bot.action('OSS_ACTION', (ctx) => ctx.scene.enter('OssDecisionPaperWizard'))
//bot.action('LAW_OSS_ACTION', (ctx) => ctx.scene.enter('ossDecisionPaperWizard'))

bot.on('message', (ctx) => ctx.reply('–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', mainScreenKeyboard))
bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))